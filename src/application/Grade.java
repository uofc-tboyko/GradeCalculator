package application;

/**
 * The Grade class is a simple class that takes parameters on construction and
 * can be used to calculate a weighted grade, generate error message, and 
 * validate user input.
 * @author thomas
 *
 */
public class Grade {
	double value;
	int maxValue;
	double weight;
	
	/**
	 * Constructor function for the Grade class.
	 * 
	 * @param gradeValue - The raw number scored on a graded component
	 * @param maxPossibleGradeValue - The maximum value on a graded component
	 * @param weightTowardsCourse - the weight of the component towards a larger part of the course.
	 */
	Grade (double gradeValue, int maxPossibleGradeValue, double weightTowardsCourse) {
		value =gradeValue;
		maxValue = maxPossibleGradeValue;
		weight = weightTowardsCourse;
		
	}

	/**
	 * Takes the values generated by the constructor and calculates the final contribution towards the course.
	 * @return The weighted percentage final grade
	 */
	double getWeightedPercentageGrade() {
		return value*100*weight/maxValue;
	}
	
	/*
     * Convert the value entered from a string to a double. The value set in the variable value will be 0 if the string contains non-digit
     * values or if the value after conversion to double is out of the range 0-100%
     * 
     * @param valueAsString a string that holds the value entered by the user to become the project grade
     * @return errorMessage a string containing the appropriate error message if there is an error.
     **/
    String setValue(String valueAsString) {
    	
    	//checking for valid numbers in the text field
    	boolean valueValid = true;
    	boolean periodUsed = false;
    	String errorMessage ="";
    	
    	for(char c : valueAsString.toCharArray()) {
    		//check if the current character is a digit.
    		if(!(Character.isDigit(c)||c=='-')) {
    			if(periodUsed||c!='.') {
    				valueValid = false;
    				errorMessage = ("Error: Input contains "+c+". Make sure to enter a number");
    				value = 0;
    			}
    			else if(!periodUsed&&c=='.') {
    				periodUsed=true;
    			}
    		}
    	}
    	
    	//convert the input to double if the input is valid. Otherwise it will be 0
    	if (valueValid) {
    		value = Double.parseDouble(valueAsString);
    	}
    	
    	//return an error if the project grade is not out of 100
    	//include in the computation if it's valid.
    	if(value<0.0||value>maxValue) {
    		errorMessage = String.format("Error: Grade should be between 0 and %d",maxValue);
    		value = 0;
    	} 
    	return errorMessage;
    }
}
